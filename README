Let me give all of you some details about what I've been doing during all that time...

- now I have Go installed on my machine, I also have GoLand which was my IDE for this project
- I spent 3 days learning about Go, and I must admit, that it looks very interesting and has some benefits over the technologies I previously knew, I like it already
- I wanted to have fully functional Prometheus instance, so I set it up running on docker/minikube/kubernetes
- my application, locally, also works on kubernetes, so you would be able to find following files/scripts within the package (I'm using them for my work):
  - Dockerfile - to dockerize the project
  - deployment.yaml - to deploy to minicube/kubernetes - this creates pod, I defined liveness and readiness there
  - service.yaml - pods (see above) do not provide constant access points, so I decided to create service over them, to have it exposed with constant access point - this was needed for Prometheus
- kubernetes Prometheus instance was configured to scrape metrics, so it's connected to the app:
         670     scrape_configs:
         671       - job_name: alluvial-ex1
         672         static_configs:
         673           - targets:
         674             - alluvial-ex1-service:8081
- the project has three modules:
  - main - to start the app
  - metric - to prepare handy metrics
  - server - to serve the requests
- when talking about server
  - I decided to make it more robust, and implemented iterating over three gateway URLs (see gatewayURLs), in case some of them are not working
  - I also cache the eth client to make the communication more performative
- in the test directory, there is a very simple, but working, integration test for venom framework

There is more things to describe, but I'll share that during the interview.

Please let me know in case of any questions...
